name: Github Actions for Pressio

on: [push]

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      matrix:
          config:
          - {
              name: "Ubuntu 20.04 GCC",
              build_type: "Debug", cc: "gcc", cxx: "g++",
              options: "-eigen-path=/home/runner/work/pressio/pressio_builds/eigen/install -gtest-path=/home/runner/work/pressio/pressio_builds/gtest/install",
              envscript: "",
              requirements: "",
              ctest_build: /home/runner/work/pressio/pressio_builds/pressio/build
            }
          - {
              name: "Ubuntu 20.04 GCC - coverage",
              build_type: "Debug", cc: "gcc", cxx: "g++",
              options: "-cmake-generator-name=default_with_tests_codecov -eigen-path=/home/runner/work/pressio/pressio_builds/eigen/install -gtest-path=/home/runner/work/pressio/pressio_builds/gtest/install",
              envscript: "",
              requirements: "sudo apt install gcovr",
              ctest_build: /home/runner/work/pressio/pressio_builds/pressio/build,
              coverage: true
            }
          - {
              name: "Ubuntu 20.04 Clang",
              build_type: "Debug", cc: "clang", cxx: "clang++",
              options: "-eigen-path=/home/runner/work/pressio/pressio_builds/eigen/install -gtest-path=/home/runner/work/pressio/pressio_builds/gtest/install",
              envscript: "",
              requirements: "",
              ctest_build: /home/runner/work/pressio/pressio_builds/pressio/build
            }
          - {
              name: "Ubuntu 20.04 MPI - trilinos",
              build_type: "Debug", cc: "mpicc", cxx: "mpicxx",
              options: "-cmake-generator-name=default_mpi_trilinos_with_tests -eigen-path=/home/runner/work/pressio/pressio_builds/eigen/install -gtest-path=/home/runner/work/pressio/pressio_builds/gtest/install -trilinos-path=/home/runner/work/pressio/pressio_builds/trilinos/install",
              envscript: "-env-script=/home/runner/work/pressio/pressio_repos/pressio-builder/sample_env_scripts/setenv_mpi_ubuntu_ci.sh",
              requirements: "sudo apt install -y openmpi-bin libopenmpi-dev;sudo sed -i -e '$alocalhost slots=4' /etc/openmpi/openmpi-default-hostfile",
              ctest_build: /home/runner/work/pressio/pressio_builds/pressio/build
            }

    steps:
    - uses: actions/checkout@v1
    - name: Creating environnement...
      run: |
        cd ..
        mkdir pressio_repos
        PARENT_DIR=$(pwd)
        echo "WORKSPACE_PARENT_DIR=$PARENT_DIR" >> $GITHUB_ENV
        echo "PRESSIO_REPOS=$PARENT_DIR/pressio_repos" >> $GITHUB_ENV
        echo "PRESSIO_BUILDS=$PARENT_DIR/pressio_builds" >> $GITHUB_ENV
        #echo ::set-env name=WORKSPACE_PARENT_DIR::$PARENT_DIR
        #echo ::set-env name=PRESSIO_REPOS::$PARENT_DIR/pressio_repos
        #echo ::set-env name=PRESSIO_BUILDS::$PARENT_DIR/pressio_builds
        ${{ matrix.config.requirements }}

    - name: Cloning Pressio Builder...
      run: |
        cd ${{ env.PRESSIO_REPOS }}
        git clone git://github.com/Pressio/pressio-builder.git
        cd pressio-builder
        git checkout master

    - name: Get TPLs...
      run: |
        export TERM=xterm
        docker run -di perrinel/ubuntu-pressio-tpl
        TNAME=$(docker ps --format "{{.Names}}")
        docker cp $TNAME:/home/pressio_builds ${{ env.WORKSPACE_PARENT_DIR }}

    - name: Run main_pressio script
      env:
        CC: ${{ matrix.config.cc }}
        CXX: ${{ matrix.config.cxx }}
      run: |
        export TERM=xterm
        cd ${{ env.PRESSIO_REPOS }}/pressio-builder
        ./main_pressio.sh ${{ matrix.config.envscript }} -dryrun=no -pressio-src=${{ env.WORKSPACE_PARENT_DIR }}/pressio -target-dir=${{ env.PRESSIO_BUILDS }} -cmake-generator-name=default_with_tests ${{ matrix.config.options }}
    - name: Run CTest
      run: |
        cd ${{ matrix.config.ctest_build }}
        export LD_LIBRARY_PATH=${{ env.PRESSIO_BUILDS }}/trilinos/install/lib
        ctest -V
    - if: ${{ matrix.config.coverage }}
      name: Generate code coverage
      run: |
        cd ${{ matrix.config.ctest_build }}
        gcovr -x -r ${{ env.WORKSPACE_PARENT_DIR }}/pressio/packages . -o pressio_tests_coverage.xml
    - if: ${{ matrix.config.coverage }}
      name: Upload code coverage
      uses: codecov/codecov-action@v1
      with:
        file: ${{ matrix.config.ctest_build }}/pressio_tests_coverage.xml
        name: codecoverage-pressio
