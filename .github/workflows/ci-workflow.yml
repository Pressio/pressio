name: github-linux

on: [push, pull_request]

#https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#concurrency
# concurrency is a new feature to GitHub Actions, currently in beta stage
# ${{ github.head_ref }} guarantees that the same job names are not cancelled on different branches
concurrency:
  group: CI-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  #------------------------
  CI:
  #------------------------
    continue-on-error: true

    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        config:
          # note: the os is always ubuntu because that is the os of the github runner
          # but the code is run via docker

          - { os: ubuntu-latest, image: ubuntu-20.04-gnu_9-eigen_3.3.7-gtest,   mode: Release }
          - { os: ubuntu-latest, image: ubuntu-20.04-gnu_9-eigen_3.3.7-gtest,   mode: Debug }

          - { os: ubuntu-latest, image: ubuntu-20.04-clang_9-eigen_3.3.7-gtest, mode: Release }
          - { os: ubuntu-latest, image: ubuntu-20.04-clang_9-eigen_3.3.7-gtest, mode: Debug }

          - { os: ubuntu-latest, image: fedora-34-gnu_11-eigen_3.3.7-gtest,     mode: Release }
          - { os: ubuntu-latest, image: fedora-34-gnu_11-eigen_3.3.7-gtest,     mode: Debug }

          - { os: ubuntu-latest, image: fedora-34-clang_12-eigen_3.3.7-gtest,   mode: Release }
          - { os: ubuntu-latest, image: fedora-34-clang_12-eigen_3.3.7-gtest,   mode: Debug }

          - { os: ubuntu-latest, image: ubuntu-20.04-intel-eigen_3.3.7-gtest-trilinos_9fec35276d846a667bc668ff4cbdfd8be0dfea08, mode: Release }
          - { os: ubuntu-latest, image: ubuntu-20.04-intel-eigen_3.3.7-gtest-trilinos_9fec35276d846a667bc668ff4cbdfd8be0dfea08, mode: Debug }

    runs-on: ${{ matrix.config.os }}
    container: pressiomodelreduction/${{ matrix.config.image }}

    env:
      pressio_dir: /__w/pressio/pressio
      target_dir: /out
      eigen_path: /usr/local/eigen/install
      gtest_path: /usr/local/gtest/install
      small: small
      medium: medium
      large: large

    steps:
      - uses: actions/checkout@v2
      - name: configure
        run: |
          cd /pressio-builder
          git pull
          git status

          sed -i 's/source .\/shared\/colors.sh/# colors commnted out/g' main_pressio.sh

          ./main_pressio.sh -dryrun=no -build-mode=${{ matrix.config.mode }} \
          -target-dir=${{env.target_dir}} -eigen-path=${{env.eigen_path}} \
          -gtest-path=${{env.gtest_path}} -cmake-generator-name=default_with_tests \
          -pressio-src=${{env.pressio_dir}} -ncpu-for-make=4 --config-only=yes

      - name: build-test-${{ env.small }}
        run: |
            cd ${{ env.target_dir }}/pressio/build/tests/functional_${{ env.small }}
            make -j 2
            ctest --output-on-failure

      - name: build-test-${{ env.medium }}
        run: |
          cd ${{ env.target_dir }}/pressio/build/tests/functional_${{ env.medium }}
          make -j 2
          ctest --output-on-failure

      - name: build-test-${{ env.large }}
        run: |
          cd ${{ env.target_dir }}/pressio/build/tests/functional_${{ env.large }}
          make -j 2
          ctest --output-on-failure

  #------------------------
  CI-trilinos:
  #------------------------
    runs-on: ubuntu-20.04

    strategy:
      matrix:
          config:
          # - {
          #     name: "ubuntu_20.04_gcc",
          #     build_type: "Debug", cc: "gcc", cxx: "g++",
          #     options: "-eigen-path=/home/runner/work/pressio/pressio_builds/eigen/install -gtest-path=/home/runner/work/pressio/pressio_builds/gtest/install",
          #     envscript: "",
          #     requirements: "",
          #     ctest_build: /home/runner/work/pressio/pressio_builds/pressio/build
          #   }


          # - {
          #     name: "ubuntu_20.04_clang",
          #     build_type: "Debug", cc: "clang", cxx: "clang++",
          #     options: "-eigen-path=/home/runner/work/pressio/pressio_builds/eigen/install -gtest-path=/home/runner/work/pressio/pressio_builds/gtest/install",
          #     envscript: "",
          #     requirements: "",
          #     ctest_build: /home/runner/work/pressio/pressio_builds/pressio/build
          #   }

          - {
              trilinos_release: "13.0.0",
              name: "ubuntu_20.04_gcc_openmpi_trilinos_release_13.0.0",
              build_type: "Release", cc: "mpicc", cxx: "mpicxx",
              options: "-cmake-generator-name=default_mpi_trilinos_with_tests -eigen-path=/home/runner/work/pressio/pressio_builds/eigen/install -gtest-path=/home/runner/work/pressio/pressio_builds/gtest/install -trilinos-path=/home/runner/work/pressio/pressio_builds/trilinos/install",
              envscript: "-env-script=/home/runner/work/pressio/pressio_repos/pressio-builder/sample_env_scripts/setenv_mpi_ubuntu_ci.sh",
              requirements: "sudo apt install -y openmpi-bin libopenmpi-dev;sudo sed -i -e '$alocalhost slots=4' /etc/openmpi/openmpi-default-hostfile",
              ctest_build: /home/runner/work/pressio/pressio_builds/pressio/build
            }

          - {
              trilinos_release: "13.0.0",
              name: "ubuntu_20.04_gcc_openmpi_trilinos_debug_13.0.0",
              build_type: "Debug", cc: "mpicc", cxx: "mpicxx",
              options: "-cmake-generator-name=default_mpi_trilinos_with_tests -eigen-path=/home/runner/work/pressio/pressio_builds/eigen/install -gtest-path=/home/runner/work/pressio/pressio_builds/gtest/install -trilinos-path=/home/runner/work/pressio/pressio_builds/trilinos/install",
              envscript: "-env-script=/home/runner/work/pressio/pressio_repos/pressio-builder/sample_env_scripts/setenv_mpi_ubuntu_ci.sh",
              requirements: "sudo apt install -y openmpi-bin libopenmpi-dev;sudo sed -i -e '$alocalhost slots=4' /etc/openmpi/openmpi-default-hostfile",
              ctest_build: /home/runner/work/pressio/pressio_builds/pressio/build
            }

          - {
              trilinos_release: "13.0.1",
              name: "ubuntu_20.04_gcc_openmpi_trilinos_release_13.0.1",
              build_type: "Release", cc: "mpicc", cxx: "mpicxx",
              options: "-cmake-generator-name=default_mpi_trilinos_with_tests -eigen-path=/home/runner/work/pressio/pressio_builds/eigen/install -gtest-path=/home/runner/work/pressio/pressio_builds/gtest/install -trilinos-path=/home/runner/work/pressio/pressio_builds/trilinos/install",
              envscript: "-env-script=/home/runner/work/pressio/pressio_repos/pressio-builder/sample_env_scripts/setenv_mpi_ubuntu_ci.sh",
              requirements: "sudo apt install -y openmpi-bin libopenmpi-dev;sudo sed -i -e '$alocalhost slots=4' /etc/openmpi/openmpi-default-hostfile",
              ctest_build: /home/runner/work/pressio/pressio_builds/pressio/build
            }

          - {
              trilinos_release: "13.0.1",
              name: "ubuntu_20.04_gcc_openmpi_trilinos_debug_13.0.1",
              build_type: "Debug", cc: "mpicc", cxx: "mpicxx",
              options: "-cmake-generator-name=default_mpi_trilinos_with_tests -eigen-path=/home/runner/work/pressio/pressio_builds/eigen/install -gtest-path=/home/runner/work/pressio/pressio_builds/gtest/install -trilinos-path=/home/runner/work/pressio/pressio_builds/trilinos/install",
              envscript: "-env-script=/home/runner/work/pressio/pressio_repos/pressio-builder/sample_env_scripts/setenv_mpi_ubuntu_ci.sh",
              requirements: "sudo apt install -y openmpi-bin libopenmpi-dev;sudo sed -i -e '$alocalhost slots=4' /etc/openmpi/openmpi-default-hostfile",
              ctest_build: /home/runner/work/pressio/pressio_builds/pressio/build
            }

          # - {
          #     name: "ubuntu_20.04_gcc_coverage",
          #     build_type: "Debug", cc: "gcc", cxx: "g++",
          #     options: "-cmake-generator-name=default_with_tests_codecov -eigen-path=/home/runner/work/pressio/pressio_builds/eigen/install -gtest-path=/home/runner/work/pressio/pressio_builds/gtest/install",
          #     envscript: "",
          #     requirements: "sudo apt install gcovr",
          #     ctest_build: /home/runner/work/pressio/pressio_builds/pressio/build,
          #     coverage: true,
          #     coverage_filename: "pressio_tests_coverage.xml",
          #     coverage_uploadname: "codecoverage-pressio",
          #     flag: "pressio-packages"
          #   }

          # - {
          #     name: "Ubuntu 20.04 MPI - trilinos - coverage",
          #     build_type: "Debug", cc: "mpicc", cxx: "mpicxx",
          #     options: "-cmake-generator-name=default_mpi_trilinos_with_tests_codecov -eigen-path=/home/runner/work/pressio/pressio_builds/eigen/install -gtest-path=/home/runner/work/pressio/pressio_builds/gtest/install -trilinos-path=/home/runner/work/pressio/pressio_builds/trilinos/install",
          #     envscript: "--ncpu-for-make=1 -env-script=/home/runner/work/pressio/pressio_repos/pressio-builder/sample_env_scripts/setenv_mpi_ubuntu_ci.sh",
          #     requirements: "sudo apt install -y gcovr openmpi-bin libopenmpi-dev;sudo sed -i -e '$alocalhost slots=4' /etc/openmpi/openmpi-default-hostfile",
          #     ctest_build: /home/runner/work/pressio/pressio_builds/pressio/build,
          #     coverage: true,
          #     coverage_filename: "pressio_tests_mpi_coverage.xml",
          #     coverage_uploadname: "codecoverage-pressio-trilinos",
          #     flag: "pressio-trilinos-packages"
          #   }

    steps:
    - uses: actions/checkout@v1
    - name: Creating environnement...
      run: |
        cd ..
        mkdir pressio_repos
        PARENT_DIR=$(pwd)
        echo "WORKSPACE_PARENT_DIR=$PARENT_DIR" >> $GITHUB_ENV
        echo "PRESSIO_REPOS=$PARENT_DIR/pressio_repos" >> $GITHUB_ENV
        echo "PRESSIO_BUILDS=$PARENT_DIR/pressio_builds" >> $GITHUB_ENV
        sudo apt-get update
        ${{ matrix.config.requirements }}

    - name: Cloning Pressio Builder...
      run: |
        cd ${{ env.PRESSIO_REPOS }}
        git clone git://github.com/Pressio/pressio-builder.git
        cd pressio-builder
        git checkout main

    - name: Get TPLs...
      run: |
        export TERM=xterm
        docker run -di pressiomodelreduction/ubuntu-20.04-gnu_10-eigen_3.3.7-gtest-trilinos_rel_${{ matrix.config.trilinos_release }}
        TNAME=$(docker ps --format "{{.Names}}")
        docker cp $TNAME:/home/pressio_builds ${{ env.WORKSPACE_PARENT_DIR }}
        docker stop $TNAME
        docker rm $TNAME
        docker image rm pressiomodelreduction/ubuntu-20.04-gnu_10-eigen_3.3.7-gtest-trilinos_rel_${{ matrix.config.trilinos_release }}

    - name: Build
      env:
        CC: ${{ matrix.config.cc }}
        CXX: ${{ matrix.config.cxx }}
      run: |
        export TERM=xterm
        cd ${{ env.PRESSIO_REPOS }}/pressio-builder
        ./main_pressio.sh ${{ matrix.config.envscript }} -dryrun=no \
        -build-mode=${{ matrix.config.build_type }} \
        -pressio-src=${{ env.WORKSPACE_PARENT_DIR }}/pressio \
        -target-dir=${{ env.PRESSIO_BUILDS }} \
        -cmake-generator-name=default_with_tests ${{ matrix.config.options }} \
        -ncpu-for-make=4

    - name: Test
      run: |
        cd ${{ matrix.config.ctest_build }}
        export LD_LIBRARY_PATH=${{ env.PRESSIO_BUILDS }}/trilinos/install/lib
        ctest --output-on-failure

    # - if: ${{ matrix.config.coverage }}
    #   name: Generate code coverage
    #   run: |
    #     cd ${{ matrix.config.ctest_build }}
    #     gcovr -x -r ${{ env.WORKSPACE_PARENT_DIR }}/pressio/packages -e ${{ env.WORKSPACE_PARENT_DIR }}/pressio/packages/utils/src/logger/ . -o ${{ matrix.config.coverage_filename }}

    # - if: ${{ matrix.config.coverage }}
    #   name: Upload code coverage
    #   uses: codecov/codecov-action@v1
    #   with:
    #     file: ${{ matrix.config.ctest_build }}/${{ matrix.config.coverage_filename }}
    #     name: ${{ matrix.config.coverage_uploadname }}
    #     flags: ${{ matrix.config.flag }}
