############################## WORKFLOW ##############################
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#name
# This workflow will be visible in GitHun Aciton under the name, defined below.
name: github-linux

############################## TRIGGERS ##############################
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#on
# This workflow will be triggered on git action defined below e.g. push, pull_request.
on:
  pull_request:
    types: [ opened, reopened, synchronize ]
    paths-ignore:
    - 'logos/**'
    - 'helper_scripts/**'
    - 'docker_scripts/**'
    - 'docs/**'
    - '**/*.md'
  push: # for direct quick fixes
    branches:
      - 'main'
      - 'develop'
    paths-ignore:
    - 'logos/**'
    - 'helper_scripts/**'
    - 'docker_scripts/**'
    - 'docs/**'
    - '**/*.md'

############################## CONCURRENCY ##############################
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#concurrency
# Concurrency is a new feature to GitHub Actions, currently in beta stage.
# ${{ github.head_ref }} guarantees that the same job names are not cancelled on different branches.
concurrency:
  group: CI-${{ github.head_ref }}
  cancel-in-progress: true

############################## JOBS ##############################
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobs
# A workflow run is made up of one or more jobs. Jobs run in parallel by default.
jobs:
  # Redo JOB `CI`
  # > HERE

  ############################## JOB `CI-trilinos` defined below ##############################
  CI-trilinos:
    strategy:
      matrix:
        config:
        - {
            os: ubuntu-latest,
            image: ubuntu-20.04-gnu_10-eigen_3.3.7-gtest-trilinos_hash-ef73d14babf6e7556b0420add98cce257ccaa56b,
            build_type: "Release", cc: "mpicc", cxx: "mpicxx",
            requirements: "apt install -y openmpi-bin libopenmpi-dev;sed -i -e '$alocalhost slots=4' /etc/openmpi/openmpi-default-hostfile",
          }

        - {
            os: ubuntu-latest,
            image: ubuntu-20.04-gnu_10-eigen_3.3.7-gtest-trilinos_hash-ef73d14babf6e7556b0420add98cce257ccaa56b,
            build_type: "Debug", cc: "mpicc", cxx: "mpicxx",
            requirements: "apt install -y openmpi-bin libopenmpi-dev;sed -i -e '$alocalhost slots=4' /etc/openmpi/openmpi-default-hostfile",
          }
        build_type:
          - Debug

    runs-on: ${{ matrix.config.os }}

    container: pressiomodelreduction/${{ matrix.config.image }}

    env:
      num_cpus: 4
      pressio_src: /__w/pressio/pressio
      pressio_build: /out/pressio/build
      eigen_inc_dir: /usr/local/eigen/install/include/eigen3
      gtest_dir: //usr/local/gtest/install
      trilinos_dir: /usr/local/trilinos/install

    steps:
    - uses: actions/checkout@v1

    - name: Creating environnement
      run: |
        apt-get update -y
        ${{ matrix.config.requirements }}

    - name: Configure
      run: |
        cmake -S $pressio_src -B $pressio_build \
          -D CMAKE_BUILD_TYPE:STRING=${{ matrix.build_type }} \
          -D CMAKE_VERBOSE_MAKEFILE:BOOL=ON \
          -D CMAKE_C_COMPILER:FILEPATH=/usr/bin/mpicc \
          -D CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/mpic++ \
          -D MPI_Fortran_COMPILER:FILEPATH=/usr/bin/mpif90 \
          -D PRESSIO_ENABLE_TESTS:BOOL=ON \
          -D PRESSIO_ENABLE_TPL_EIGEN:BOOL=ON \
          -D PRESSIO_ENABLE_TPL_MPI:BOOL=ON \
          -D PRESSIO_ENABLE_TPL_TRILINOS:BOOL=ON \
          -D PRESSIO_ENABLE_TPL_KOKKOS:BOOL=ON \
          -D PRESSIO_ENABLE_TPL_BLAS:BOOL=ON \
          -D PRESSIO_ENABLE_TPL_LAPACK:BOOL=ON \
          -D PRESSIO_ENABLE_DEBUG_PRINT=ON \
          -D EIGEN_INCLUDE_DIR=$eigen_inc_dir \
          -D GTEST_INCLUDE_DIR=$gtest_dir \
          -D TRILINOS_ROOT=$trilinos_dir \
          -D KOKKOS_ROOT= \
          -D KOKKOS_KERNELS_ROOT= \
          -D CMAKE_INSTALL_PREFIX:PATH=../install \
          -D CMAKE_CXX_FLAGS=''

    - name: Build
      run: cmake --build $pressio_build -j $num_cpus

    #- name: Test
    #  run: |
    #    cd ${{ env.ctest_build }}
    #    export LD_LIBRARY_PATH=${{ env.pressio_builds_dir }}/trilinos/install/lib
    #    export OMPI_ALLOW_RUN_AS_ROOT=1
    #    export OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
    #    ctest -j $num_cpus --output-on-failure

  # Redo JOB `c++ 20`
  # > HERE