############################## WORKFLOW ##############################
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#name
# This workflow will be visible in GitHun Aciton under the name, defined below.
name: github-linux

############################## TRIGGERS ##############################
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#on
# This workflow will be triggered on git action defined below e.g. push, pull_request.
on:
  pull_request:
    types: [ opened, reopened, synchronize ]
    paths-ignore:
    - 'logos/**'
    - 'helper_scripts/**'
    - 'docker_scripts/**'
    - 'docs/**'
    - '**/*.md'
  push: # for direct quick fixes
    branches:
      - 'main'
      - 'develop'
    paths-ignore:
    - 'logos/**'
    - 'helper_scripts/**'
    - 'docker_scripts/**'
    - 'docs/**'
    - '**/*.md'

############################## CONCURRENCY ##############################
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#concurrency
# Concurrency is a new feature to GitHub Actions, currently in beta stage.
# ${{ github.head_ref }} guarantees that the same job names are not cancelled on different branches.
concurrency:
  group: CI-${{ github.head_ref }}
  cancel-in-progress: true

############################## JOBS ##############################
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#jobs
# A workflow run is made up of one or more jobs. Jobs run in parallel by default.
jobs:
  # Redo JOB `CI`
  # > HERE

  ############################## JOB `CI-trilinos` defined below ##############################
  CI-trilinos:
    strategy:
      matrix:
          config:
          - {
              os: ubuntu-latest,
              image: ubuntu-20.04-gnu_10-eigen_3.3.7-gtest-trilinos_hash-ef73d14babf6e7556b0420add98cce257ccaa56b,
              build_type: "Release", cc: "mpicc", cxx: "mpicxx",
              requirements: "apt install -y openmpi-bin libopenmpi-dev;sed -i -e '$alocalhost slots=4' /etc/openmpi/openmpi-default-hostfile",
            }

          - {
              os: ubuntu-latest,
              image: ubuntu-20.04-gnu_10-eigen_3.3.7-gtest-trilinos_hash-ef73d14babf6e7556b0420add98cce257ccaa56b,
              build_type: "Debug", cc: "mpicc", cxx: "mpicxx",
              requirements: "apt install -y openmpi-bin libopenmpi-dev;sed -i -e '$alocalhost slots=4' /etc/openmpi/openmpi-default-hostfile",
            }

    runs-on: ${{ matrix.config.os }}

    container: pressiomodelreduction/${{ matrix.config.image }}

    env:
      pressio_dir: /__w/pressio/pressio
      pressio_builder_dir: /home/pressio_repos/pressio-builder
      pressio_builds_dir: /home/pressio_builds
      ctest_build: /home/pressio_builds/pressio/build

    steps:
    - uses: actions/checkout@v1
    - name: Creating environnement
      run: |
        apt-get update -y
        ${{ matrix.config.requirements }}

    - name: Pressio Builder Update
      run: |
        cd ${{ env.pressio_builder_dir }}
        git checkout main
        git pull

    - name: Build
      env:
        CC: ${{ matrix.config.cc }}
        CXX: ${{ matrix.config.cxx }}
      run: |
        export TERM=xterm
        cd ${{ env.pressio_builder_dir }}
        ./main_pressio.sh -env-script=${{ env.pressio_builder_dir }}/sample_env_scripts/setenv_mpi_ubuntu_ci.sh \
        -dryrun=no -build-mode=${{ matrix.config.build_type }} -pressio-src=${{ env.pressio_dir }} \
        -target-dir=${{ env.pressio_builds_dir }} -cmake-generator-name=default_mpi_trilinos_with_tests \
        -eigen-path=${{ env.pressio_builds_dir }}/eigen/install -gtest-path=${{ env.pressio_builds_dir }}/gtest/install \
        -trilinos-path=${{ env.pressio_builds_dir }}/trilinos/install -ncpu-for-make=4

    - name: Test
      run: |
        cd ${{ env.ctest_build }}
        export LD_LIBRARY_PATH=${{ env.pressio_builds_dir }}/trilinos/install/lib
        export OMPI_ALLOW_RUN_AS_ROOT=1
        export OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
        ctest -j 4 --output-on-failure

  # Redo JOB `c++ 20`
  # > HERE