name: github-Linux-baseline

on:
  pull_request:
    types: [ opened, reopened, synchronize ]
    paths-ignore:
    - 'logos/**'
    - 'helper_scripts/**'
    - 'docker_scripts/**'
    - 'docs/**'
    - '**/*.md'
  push: # for direct quick fixes
    branches:
      - 'main'
      - 'develop'
    paths-ignore:
    - 'logos/**'
    - 'helper_scripts/**'
    - 'docker_scripts/**'
    - 'docs/**'
    - '**/*.md'

concurrency:
  group: ${ {github.event_name }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{github.event_name == 'pull_request'}}

jobs:
  CI:
    name: baseline
    continue-on-error: false

    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        config:
          # os: Stands for OS on GitHub Runner (Ubuntu / MacOS / Windows)
          # image: Stands for used Docker Image
          # mode: Stands for build mode inside Pressio (Debug / Release)
          - { os: ubuntu-latest, image: ubuntu-20.04-gnu_9-eigen_3.3.7-gtest, mode: Release }
          - { os: ubuntu-latest, image: ubuntu-20.04-gnu_9-eigen_3.3.7-gtest, mode: Debug }

          - { os: ubuntu-latest, image: ubuntu-20.04-clang_9-eigen_3.3.7-gtest, mode: Release }
          - { os: ubuntu-latest, image: ubuntu-20.04-clang_9-eigen_3.3.7-gtest, mode: Debug }

          - { os: ubuntu-latest, image: fedora-34-gnu_11-eigen_3.3.7-gtest, mode: Release }
          - { os: ubuntu-latest, image: fedora-34-gnu_11-eigen_3.3.7-gtest, mode: Debug }

          - { os: ubuntu-latest, image: fedora-34-clang_12-eigen_3.3.7-gtest, mode: Release }
          - { os: ubuntu-latest, image: fedora-34-clang_12-eigen_3.3.7-gtest, mode: Debug }

          #- { os: ubuntu-latest, image: intel_oneapi-eigen_3.3.7-gtest, mode: Release }
          #- { os: ubuntu-latest, image: intel_oneapi-eigen_3.3.7-gtest, mode: Debug }

    runs-on: ${{ matrix.config.os }}
    container: pressiomodelreduction/${{ matrix.config.image }}
    env:
      num_cpus: 2
      eigen_inc_dir: /usr/local/eigen/install/include/eigen3
      gtest_dir: /usr/local/gtest/install

    steps:
      - uses: actions/checkout@v3

      - name: configure
        run: |
          cmake -B builddir \
            -D CMAKE_BUILD_TYPE:STRING=${{ matrix.config.mode }} \
            -D CMAKE_VERBOSE_MAKEFILE:BOOL=ON \
            -D CMAKE_C_COMPILER=$CC \
            -D CMAKE_CXX_COMPILER=$CXX \
            -D PRESSIO_ENABLE_TPL_EIGEN:BOOL=ON \
            -D EIGEN_INCLUDE_DIR=$eigen_inc_dir \
            -D GTEST_ROOT=$gtest_dir \
            -D PRESSIO_ENABLE_DEBUG_PRINT=ON \
            -D PRESSIO_ENABLE_TESTS:BOOL=ON \
            -D CMAKE_INSTALL_PREFIX:PATH=../install \
            -D CMAKE_CXX_FLAGS=''

      # In this stage small functional tests are built and run
      - name: build-test-small
        run: |
          cd builddir/tests/functional_small
          make -j $num_cpus
          ctest -j $num_cpus --output-on-failure

      # In this stage medium functional tests are built and run
      - name: build-test-medium
        run: |
          cd builddir/tests/functional_medium
          make -j $num_cpus
          ctest -j $num_cpus --output-on-failure

      # In this stage large functional tests are built and run
      - name: build-test-large
        run: |
          cd builddir/tests/functional_large
          make -j $num_cpus
          ctest -j $num_cpus --output-on-failure
