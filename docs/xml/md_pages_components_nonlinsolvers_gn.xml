<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="md_pages_components_nonlinsolvers_gn" kind="page">
    <compoundname>md_pages_components_nonlinsolvers_gn</compoundname>
    <title>Nonlinear Solvers: Gauss-Newton</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para> <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-note m-default" /></para>
<para><parblock><para>Defined in header <computeroutput>&lt;pressio/solvers_nonlinear.hpp&gt;</computeroutput></para>
<para>Public namespace: <computeroutput>pressio::nonlinearsolvers</computeroutput> </para>
</parblock></para>
<sect1 id="md_pages_components_nonlinsolvers_gn_1autotoc_md20">
<title>Gauss-Newton via Normal-Equations</title>
<sect2 id="md_pages_components_nonlinsolvers_gn_1autotoc_md21">
<title>API, Parameters and Requirements</title>
<para><programlisting filename=".cpp"><codeline><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ProblemClassType,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StateType,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LinearSolverType</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>create_gauss_newton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ProblemClassType<sp/>&amp;<sp/>system,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StateType<sp/>&amp;<sp/>state,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearSolverType<sp/>&amp;&amp;<sp/>lsolver);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ProblemClassType,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StateType,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LinearSolverType,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">WeightingOpType</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2)</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>create_gauss_newton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ProblemClassType<sp/>&amp;<sp/>system,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StateType<sp/>&amp;<sp/>state,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearSolverType<sp/>&amp;&amp;<sp/>lsolver,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WeightingOpType<sp/>&amp;&amp;<sp/>weightOperator);</highlight></codeline>
</programlisting></para>
<para><itemizedlist>
<listitem><para><computeroutput>system</computeroutput>:<itemizedlist>
<listitem><para>instance of the problem you want to solve  <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-block m-warning" /></para>
<para><parblock><para><itemizedlist>
<listitem><para>overload 1: accepts the <ulink url="md_pages_components_nonlinsolvers_system_api.html">residual-jacobian, hessian-gradient API, or their fused versions</ulink></para>
</listitem><listitem><para>overload 2: <emphasis>only</emphasis> accepts the <ulink url="md_pages_components_nonlinsolvers_system_api.html">residual-jacobian API or its fused version</ulink> </para>
</listitem></itemizedlist>
</para>
</parblock></para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para><computeroutput>state</computeroutput>:<itemizedlist>
<listitem><para>your state data</para>
</listitem><listitem><para>Requirements: must be an Eigen or Kokkos vector: <mcss:span xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-text m-danger">todo</mcss:span> explain why</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><computeroutput>lsolver</computeroutput>:<itemizedlist>
<listitem><para>linear solver for solving the normal equations, choose one from <ulink url="md_pages_components_linsolvers.html">linear solver API</ulink></para>
</listitem><listitem><para>if you want to implement your own, then the linear solver class still has to conform to the <ulink url="md_pages_components_linsolvers.html">linear solver API</ulink></para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><computeroutput>weightOperator</computeroutput>:<itemizedlist>
<listitem><para>weighting operator for doing weighted least-squares. Must conform to: <programlisting filename=".cpp"><codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">WeightingOperator</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>residual_type<sp/>&amp;<sp/>operand,<sp/>residual_type<sp/>&amp;<sp/>result);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>jacobian_type<sp/>&amp;<sp/>operand,<sp/>jacobian_type<sp/>&amp;<sp/>result);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_pages_components_nonlinsolvers_gn_1autotoc_md22">
<title>Ops</title>
</sect2>
<sect2 id="md_pages_components_nonlinsolvers_gn_1autotoc_md23">
<title>Example usage</title>
<para><linebreak/>
 <hruler/>
 <linebreak/>
</para>
</sect2>
</sect1>
<sect1 id="md_pages_components_nonlinsolvers_gn_1autotoc_md24">
<title>Gauss-Newton via QR factorization</title>
<sect2 id="md_pages_components_nonlinsolvers_gn_1autotoc_md25">
<title>API, Parameters and Requirements</title>
<para><programlisting filename=".cpp"><codeline><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ProblemClassType,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">StateType,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">QRSolverType</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&gt;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>create_gauss_newton(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ProblemClassType<sp/>&amp;<sp/>system,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>StateType<sp/>&amp;<sp/>state,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRSolverType<sp/>&amp;&amp;<sp/>qrsolver);</highlight></codeline>
</programlisting></para>
<para><itemizedlist>
<listitem><para><computeroutput>system</computeroutput>:<itemizedlist>
<listitem><para>instance of the problem you want to solve  <mcss:class xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-block m-warning" /></para>
<para><parblock><para><itemizedlist>
<listitem><para><emphasis>only</emphasis> accepts the <ulink url="md_pages_components_nonlinsolvers_system_api.html">residual-jacobian API or its fused version</ulink> </para>
</listitem></itemizedlist>
</para>
</parblock></para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem><para><computeroutput>state</computeroutput>:<itemizedlist>
<listitem><para>your state data</para>
</listitem><listitem><para>Requirements: must be an Eigen or Kokkos vector: <mcss:span xmlns:mcss="http://mcss.mosra.cz/doxygen/" mcss:class="m-text m-danger">todo</mcss:span> explain why</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><computeroutput>qrsolver</computeroutput>:<itemizedlist>
<listitem><para>solver needed to solve the QR-based formulation of the least-squares problem <ulink url="https://en.wikipedia.org/wiki/QR_decomposition">see this</ulink></para>
</listitem><listitem><para>we suggest to use the <ulink url="md_pages_components_qr.html">pressio QR package</ulink></para>
</listitem><listitem><para>if you want to implement your own, then it has to conform to the <ulink url="md_pages_components_qr.html">this API</ulink></para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="md_pages_components_nonlinsolvers_gn_1autotoc_md26">
<title>Ops</title>
</sect2>
<sect2 id="md_pages_components_nonlinsolvers_gn_1autotoc_md27">
<title>Example usage</title>
</sect2>
</sect1>
    </detaileddescription>
    <location file="pages/components/nonlinsolvers_gn.md"/>
  </compounddef>
</doxygen>
