
/* cmake/PyROM_config.h.in.  Modified from version in src/.  */

// /* Define if Epetra is enabled */
// #cmakedefine HAVE_EPETRA

// /* Define if Tpetra is enabled */
// #cmakedefine HAVE_TPETRA

// /* Define if Domi is enabled */
// #cmakedefine HAVE_DOMI

// /* Define if Epetra namespace is enabled within NOX */
// #cmakedefine HAVE_NOX_EPETRA

// /* Define if EpetraExt capabilities are enabled within NOX::Epetra */
// #cmakedefine HAVE_NOX_EPETRAEXT

// /* Define if Petsc namespace is enabled within NOX */
// #cmakedefine HAVE_NOX_PETSC

// /* Define ML options */
// #define MLAPI_LC

/* Define if want to build default-packages */
#cmakedefine HAVE_DEFAULT_PACKAGES

/* Define if want to build examples */
#cmakedefine HAVE_EXAMPLES

/* define if we want to use MPI */
#cmakedefine HAVE_MPI

/* define if we want to use Mpi4Py */
#cmakedefine HAVE_MPI4PY

/* Define if want to build PyROM */
#cmakedefine HAVE_PyROM

// /* Define if want to build with Amesos enabled */
// #cmakedefine HAVE_PyROM_AMESOS

// /* Define if want to build with Anasazi enabled */
// #cmakedefine HAVE_PyROM_ANASAZI

// /* Define if want to build with AztecOO enabled */
// #cmakedefine HAVE_PyROM_AZTECOO

// /* Define if want to build AztecOO-Teuchos */
// #cmakedefine HAVE_PyROM_AZTECOO_TEUCHOS

// /* Define if want to build with Belos enabled */
// #cmakedefine HAVE_PyROM_BELOS

// /* Define if want to build with Claps enabled */
// #cmakedefine HAVE_PyROM_CLAPS

// /* Define if want to build with Epetra enabled */
// #cmakedefine HAVE_PyROM_EPETRA

// /* Define if want to build with EpetraExt enabled */
// #cmakedefine HAVE_PyROM_EPETRAEXT

// /* Define if want to build EpetraExt-hdf5 */
// #cmakedefine HAVE_PyROM_EPETRAEXT_HDF5

// /* Define if want to build PyROM-examples */
// #cmakedefine HAVE_PyROM_EXAMPLES

// /* Define if want to build with Galeri enabled */
// #cmakedefine HAVE_PyROM_GALERI

// /* Define if want to build with Ifpack enabled */
// #cmakedefine HAVE_PyROM_IFPACK

// /* Define if want to build with Isorropia enabled */
// #cmakedefine HAVE_PyROM_ISORROPIA

// /* Define if want to build with Kokkos enabled */
// #cmakedefine HAVE_PyROM_KOKKOS

// /* Define if want to build with Komplex enabled */
// #cmakedefine HAVE_PyROM_KOMPLEX

// /* Define if want to build with LOCA enabled */
// #cmakedefine HAVE_PyROM_LOCA

// /* Define if want to build with Meros enabled */
// #cmakedefine HAVE_PyROM_MEROS

// /* Define if want to build with ML enabled */
// #cmakedefine HAVE_PyROM_ML

// /* Define if want to build with Moertel enabled */
// #cmakedefine HAVE_PyROM_MOERTEL

// /* Define if want to build with Moocho enabled */
// #cmakedefine HAVE_PyROM_MOOCHO

// /* Define if want to build with NOX enabled */
// #cmakedefine HAVE_PyROM_NOX

// /* Define if want to build NOX-Epetra */
// #cmakedefine HAVE_PyROM_NOX_EPETRA

// /* Define if want to build NOX-Epetra with EpetraExt */
// #cmakedefine HAVE_PyROM_NOX_EPETRAEXT

// /* Define if want to build with RTOp enabled */
// #cmakedefine HAVE_PyROM_RTOP

// /* Define if want to build with Rythmos enabled */
// #cmakedefine HAVE_PyROM_RYTHMOS

// /* Define if want to build with Sacado enabled */
// #cmakedefine HAVE_PyROM_SACADO

// /* Define if want to build with Stratimikos enabled */
// #cmakedefine HAVE_PyROM_STRATIMIKOS

// /* Define if want to build PyROM-tests */
// #cmakedefine HAVE_PyROM_TESTS

// /* Define if want to build with Teuchos enabled */
// #cmakedefine HAVE_PyROM_TEUCHOS

// /* Define if want to build with Thyra enabled */
// #cmakedefine HAVE_PyROM_THYRA

// /* Define if want to build with Tpetra enabled */
// #cmakedefine HAVE_PyROM_TPETRA

// /* Define if want to build with TriUtils enabled */
// #cmakedefine HAVE_PyROM_TRIUTILS

/* Define if want to build tests */
#cmakedefine HAVE_TESTS

// // Define to 1 if you have the <unistd.h> header file. 
// #cmakedefine HAVE_UNISTD_H

// /**********************************************************************/

// ///* PyROM ordinal types */

// #define PyROM_GLOBAL_ORD long long
// #define PyROM_LOCAL_ORD  int

/**********************************************************************/

#ifdef SWIG

  #define COMPILER_ID @CMAKE_CXX_COMPILER_ID@

  #if COMPILER_ID == Clang
    #if ! defined(__clang__)
      #define __clang__
    #endif
  #endif

  #if COMPILER_ID == GNU
    #if ! defined(__GNUC__)
      #define __GNUC__
    #endif
  #endif

  #if COMPILER_ID == Intel
    #if ! defined(__INTEL_COMPILER)
      #define __INTEL_COMPILER
    #endif
  #endif

#endif
