/*
//@HEADER
// ************************************************************************
//
// CONTAINERS_OPS
//                     		  Pressio
//                             Copyright 2019
//    National Technology & Engineering Solutions of Sandia, LLC (NTESS)
//
// Under the terms of Contract DE-NA0003525 with NTESS, the
// U.S. Government retains certain rights in this software.
//
// Pressio is licensed under BSD-3-Clause terms of use:
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//
// 1. Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright
// notice, this list of conditions and the following disclaimer in the
// documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its
// contributors may be used to endorse or promote products derived
// from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
// IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
// Questions? Contact Francesco Rizzi (fnrizzi@sandia.gov)
//
// ************************************************************************
//@HEADER
*/

#ifndef CONTAINERS_OPS_HPP_
#define CONTAINERS_OPS_HPP_

#include "CONTAINERS_VECTOR"
#include "CONTAINERS_MULTI_VECTOR"
#include "CONTAINERS_MATRIX"

// arbitrary
#include "containers/src/ops/arbitrary/containers_set_zero.hpp"

// Eigen
#include "containers/src/ops/eigen/containers_eigen_ops_helper_impl.hpp"
#include "containers/src/ops/eigen/containers_mat_prod_mat.hpp"
#include "containers/src/ops/eigen/containers_mat_prod_mvec.hpp"
#include "containers/src/ops/eigen/containers_mat_prod_vec.hpp"
#include "containers/src/ops/eigen/containers_min_max_vector.hpp"
#include "containers/src/ops/eigen/containers_multi_vector_do_update.hpp"
#include "containers/src/ops/eigen/containers_mvec_dot_self.hpp"
#include "containers/src/ops/eigen/containers_mvec_dot_mvec.hpp"
#include "containers/src/ops/eigen/containers_mvec_dot_vec.hpp"
#include "containers/src/ops/eigen/containers_mvec_prod_vec.hpp"
#include "containers/src/ops/eigen/containers_norms_vector.hpp"
#include "containers/src/ops/eigen/containers_vec_dot_vec.hpp"
#include "containers/src/ops/eigen/containers_vector_do_update.hpp"
#include "containers/src/ops/eigen/containers_set_zero.hpp"
#include "containers/src/ops/eigen/containers_scale.hpp"
#include "containers/src/ops/eigen/containers_fill.hpp"
#include "containers/src/ops/eigen/containers_resize.hpp"
#include "containers/src/ops/eigen/containers_add_to_diagonal.hpp"
#include "containers/src/ops/eigen/containers_deep_copy.hpp"

// Kokkos
#include "containers/src/ops/kokkos/containers_mvec_dot_mvec.hpp"
#include "containers/src/ops/kokkos/containers_mvec_dot_self.hpp"
#include "containers/src/ops/kokkos/containers_mvec_dot_vec.hpp"
#include "containers/src/ops/kokkos/containers_mvec_prod_vec.hpp"
#include "containers/src/ops/kokkos/containers_norms_vector.hpp"
#include "containers/src/ops/kokkos/containers_vector_do_update.hpp"
#include "containers/src/ops/kokkos/containers_multi_vector_do_update.hpp"
#include "containers/src/ops/kokkos/containers_set_zero.hpp"
#include "containers/src/ops/kokkos/containers_scale.hpp"
#include "containers/src/ops/kokkos/containers_fill.hpp"
#include "containers/src/ops/kokkos/containers_deep_copy.hpp"

// Epetra
#include "containers/src/ops/epetra/containers_mat_prod_mvec.hpp"
#include "containers/src/ops/epetra/containers_min_max_vector.hpp"
#include "containers/src/ops/epetra/containers_mvec_dot_mvec.hpp"
#include "containers/src/ops/epetra/containers_mvec_dot_self.hpp"
#include "containers/src/ops/epetra/containers_mvec_dot_vec.hpp"
#include "containers/src/ops/epetra/containers_mvec_prod_vec.hpp"
#include "containers/src/ops/epetra/containers_norms_vector.hpp"
#include "containers/src/ops/epetra/containers_vector_do_update.hpp"
#include "containers/src/ops/epetra/containers_set_zero.hpp"
#include "containers/src/ops/epetra/containers_fill.hpp"
#include "containers/src/ops/epetra/containers_deep_copy.hpp"

// teuchos
#include "containers/src/ops/teuchos/containers_norms_vector.hpp"
#include "containers/src/ops/teuchos/containers_vector_do_update.hpp"
#include "containers/src/ops/teuchos/containers_set_zero.hpp"
#include "containers/src/ops/teuchos/containers_fill.hpp"
#include "containers/src/ops/teuchos/containers_deep_copy.hpp"

// Tpetra
#include "containers/src/ops/tpetra/containers_mvec_dot_mvec.hpp"
#include "containers/src/ops/tpetra/containers_mvec_dot_self.hpp"
#include "containers/src/ops/tpetra/containers_mvec_dot_vec.hpp"
#include "containers/src/ops/tpetra/containers_mvec_prod_vec.hpp"
#include "containers/src/ops/tpetra/containers_norms_vector.hpp"
#include "containers/src/ops/tpetra/containers_vector_do_update.hpp"
#include "containers/src/ops/tpetra/containers_set_zero.hpp"
#include "containers/src/ops/tpetra/containers_multi_vector_do_update.hpp"
#include "containers/src/ops/tpetra/containers_fill.hpp"
#include "containers/src/ops/tpetra/containers_deep_copy.hpp"

// Tpetra block
#include "containers/src/ops/tpetra_block/containers_mvec_dot_mvec.hpp"
#include "containers/src/ops/tpetra_block/containers_mvec_dot_self.hpp"
#include "containers/src/ops/tpetra_block/containers_mvec_dot_vec.hpp"
#include "containers/src/ops/tpetra_block/containers_mvec_prod_vec.hpp"
#include "containers/src/ops/tpetra_block/containers_norms_vector.hpp"
#include "containers/src/ops/tpetra_block/containers_vector_do_update.hpp"
#include "containers/src/ops/tpetra_block/containers_set_zero.hpp"
#include "containers/src/ops/tpetra_block/containers_multi_vector_do_update.hpp"
#include "containers/src/ops/tpetra_block/containers_fill.hpp"
#include "containers/src/ops/tpetra_block/containers_deep_copy.hpp"

// pybind11
#include "containers/src/ops/pybind11/containers_norms_vector.hpp"
#include "containers/src/ops/pybind11/containers_vector_do_update.hpp"
#include "containers/src/ops/pybind11/containers_set_zero.hpp"
#include "containers/src/ops/pybind11/containers_deep_copy.hpp"

#endif
