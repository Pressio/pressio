/*
//@HEADER
// ************************************************************************
//
// CONTAINERS_OPS
//                     		      Pressio 
// Copyright 2019 National Technology & Engineering Solutions of Sandia,LLC 
//							      (NTESS)
//
// Under the terms of Contract DE-NA0003525 with NTESS, the 
// U.S. Government retains certain rights in this software.
//
// Pressio is licensed under BSD-3-Clause terms of use:
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions 
// are met:
//
// 1. Redistributions of source code must retain the above copyright 
// notice, this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright 
// notice, this list of conditions and the following disclaimer in the 
// documentation and/or other materials provided with the distribution.
// 
// 3. Neither the name of the copyright holder nor the names of its 
// contributors may be used to endorse or promote products derived 
// from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
// COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
// IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
// POSSIBILITY OF SUCH DAMAGE.
//
// Questions? Contact Francesco Rizzi (fnrizzi@sandia.gov)
//
// ************************************************************************
//@HEADER
*/

#ifndef CONTAINERS_OPS_HPP_
#define CONTAINERS_OPS_HPP_

#include "CONTAINERS_VECTOR"
#include "CONTAINERS_MULTI_VECTOR"
#include "CONTAINERS_MATRIX"

#include "containers/src/ops/containers_ops_meta.hpp"

//// dot product ////
#include "containers/src/ops/dot/containers_multi_vector_dot_vector.hpp"
#include "containers/src/ops/dot/containers_multi_vector_dot_multi_vector.hpp"
#include "containers/src/ops/dot/containers_vector_dot_multi_vector.hpp"
#include "containers/src/ops/dot/containers_vector_dot_vector.hpp"

//// dot self ////
#include "containers/src/ops/dot_self/containers_multi_vector_dot_self.hpp"

//// mat mat product ////
#include "containers/src/ops/mat_mat_product/containers_eigen_mat_product_mat.hpp"
// #include "containers/src/ops/mat_mat_product/containers_eigen_sparse_mat_product_eigen_dense_mat.hpp"
// #include "containers/src/ops/mat_mat_product/containers_eigen_sparse_mat_product_eigen_sparse_mat.hpp"

//// mat vec product ////
#include "containers/src/ops/mat_vec_product/containers_eigen_mat_product_eigen_vector.hpp"

//// multivec vec product ////
#include "containers/src/ops/multivec_vec_product/containers_eigen_multi_vector_product_eigen_vector.hpp"
#include "containers/src/ops/multivec_vec_product/containers_epetra_multi_vector_product_armadillo_vector.hpp"
#include "containers/src/ops/multivec_vec_product/containers_epetra_multi_vector_product_eigen_vector.hpp"
#include "containers/src/ops/multivec_vec_product/containers_tpetra_multi_vector_product_eigen_vector.hpp"
#include "containers/src/ops/multivec_vec_product/containers_epetra_multi_vector_product_teuchos_serial_vector.hpp"
#include "containers/src/ops/multivec_vec_product/containers_tpetra_multi_vector_product_teuchos_serial_vector.hpp"
#include "containers/src/ops/multivec_vec_product/containers_tpetra_block_multi_vector_product_eigen_vector.hpp"
#include "containers/src/ops/multivec_vec_product/containers_kokkos_multi_vector_product_kokkos_vector.hpp"

#include "containers/src/ops/containers_vector_set_zero.hpp"
#include "containers/src/ops/containers_vector_deep_copy.hpp"

/// update function to do operations on containers
#include "containers/src/ops/do_update/containers_vector_one_term_update.hpp"
#include "containers/src/ops/do_update/containers_multi_vector_one_term_update.hpp"
#include "containers/src/ops/do_update/containers_vector_two_terms_update.hpp"
#include "containers/src/ops/do_update/containers_vector_three_terms_update.hpp"
#include "containers/src/ops/do_update/containers_vector_four_terms_update.hpp"

//// mat multivec product ////
#include "containers/src/ops/mat_multivec_product/containers_eigen_sparse_mat_product_eigen_multi_vector.hpp"
#include "containers/src/ops/mat_multivec_product/containers_epetra_sparse_mat_product_epetra_multi_vector.hpp"

//// norms ////
#include "containers/src/ops/norms/containers_norm1_vector.hpp"
#include "containers/src/ops/norms/containers_norm2_vector.hpp"

//// min ////
#include "containers/src/ops/min_max/containers_min_vector.hpp"
//// max ////
#include "containers/src/ops/min_max/containers_max_vector.hpp"

#endif
